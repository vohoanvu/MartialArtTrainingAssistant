apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: codejitsu-ingress
  namespace: test
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/websocket-services: "video-sharing"
    nginx.ingress.kubernetes.io/client-header-buffer-size: "8k"
    nginx.ingress.kubernetes.io/large-client-header-buffers: "4 32k"
    #nginx.ingress.kubernetes.io/rewrite-target: /api/$1

    # Add a configuration snippet to handle the specific rewrites
    # This snippet will be inserted into the server block generated by the Ingress controller
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~* ^/vid/api/(.*) {
        proxy_pass http://video-sharing.test.svc.cluster.local:7081/api/$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }
      location ~* ^/pair/api/(.*) {
        proxy_pass http://match-maker.test.svc.cluster.local:7082/api/$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }
      # Add other specific location blocks from your nginx-configmap.yaml here if needed,
      # for example, for /api, /swagger paths, /videoShareHub, etc.
      # Ensure they use fully qualified service names like service.namespace.svc.cluster.local

      location /api {
          proxy_pass http://fighter-manager.test.svc.cluster.local:7080;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }
      location /swagger {
          proxy_pass http://fighter-manager.test.svc.cluster.local:7080/swagger;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }
      location /vid/swagger {
          proxy_pass http://video-sharing.test.svc.cluster.local:7081/swagger;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }
      location /pair/swagger {
          proxy_pass http://match-maker.test.svc.cluster.local:7082/swagger;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }
      location /videoShareHub {
          proxy_pass http://video-sharing.test.svc.cluster.local:7081;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
      }
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /swagger
            pathType: Prefix
            backend:
              service:
                name: fighter-manager # Route to the correct service
                port:
                  number: 7080
          - path: /vid/swagger
            pathType: Prefix
            backend:
              service:
                name: video-sharing # Route to the correct service
                port:
                  number: 7081
          - path: /pair/swagger
            pathType: Prefix
            backend:
              service:
                name: match-maker # Route to the correct service
                port:
                  number: 7082
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: fighter-manager
                port:
                  number: 7080
          - path: /vid/api/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: video-sharing
                port:
                  number: 7081
          - path: /pair/api/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: match-maker
                port:
                  number: 7082
          - path: /videoShareHub
            pathType: Prefix
            backend:
              service:
                name: video-sharing
                port:
                  number: 7081
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 80
