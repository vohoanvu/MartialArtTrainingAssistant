apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: codejitsu-ingress-no-rewrite
  namespace: test
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/use-regex: "true" # Still useful for path matching if needed
    nginx.ingress.kubernetes.io/websocket-services: "video-sharing" # For /videoShareHub
    nginx.ingress.kubernetes.io/client-header-buffer-size: "8k"
    nginx.ingress.kubernetes.io/large-client-header-buffers: "4 32k"
    cert-manager.io/cluster-issuer: letsencrypt-staging # Tells cert-manager to use this ClusterIssuer
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true" # Optional: Redirects HTTP to HTTPS
spec:
  ingressClassName: nginx
  tls: # Add this TLS section
    - hosts:
        - thecodejitsu.com
      secretName: test-thecodejitsu-com-tls # cert-manager will create/manage this Secret to store the certificate
  rules:
    - host: thecodejitsu.com
    - http:
        paths:
          - path: /api # fighter-manager expects /api
            pathType: Prefix
            backend:
              service:
                name: fighter-manager
                port:
                  number: 7080
          - path: /swagger # fighter-manager expects /swagger
            pathType: Prefix
            backend:
              service:
                name: fighter-manager
                port:
                  number: 7080
          - path: /videoShareHub # video-sharing expects /videoShareHub
            pathType: Prefix
            backend:
              service:
                name: video-sharing
                port:
                  number: 7081
          - path: / # frontend expects /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 80
